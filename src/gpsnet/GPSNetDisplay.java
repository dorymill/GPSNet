/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gpsnet;

import java.text.SimpleDateFormat;
import java.util.Date;
import com.fazecast.jSerialComm.SerialPort;
import java.awt.Color;
/**
 *
 * @author hackr6
 */
public class GPSNetDisplay extends javax.swing.JFrame {

    public static Rx receiver = null;
    /**
     * Creates new form GPSNetDisplay
     */
    public GPSNetDisplay() {
        initComponents();
        populateCommPorts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        controlPanel = new javax.swing.JPanel();
        comPortBox = new javax.swing.JComboBox<>();
        connectButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        baudRateField = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        logCheckBox = new javax.swing.JCheckBox();
        textPane = new javax.swing.JPanel();
        resultTextPane = new javax.swing.JScrollPane();
        resultTextField = new javax.swing.JTextPane();
        messagePanel = new javax.swing.JPanel();
        gllCheckBox = new javax.swing.JCheckBox();
        vtgCheckBox = new javax.swing.JCheckBox();
        gsvCheckBox = new javax.swing.JCheckBox();
        gsaCheckBox = new javax.swing.JCheckBox();
        ggaCheckBox = new javax.swing.JCheckBox();
        rmcCheckBox = new javax.swing.JCheckBox();
        fixStatusText = new javax.swing.JLabel();
        tacCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Serial GPS Net (JRE 7+)");
        setPreferredSize(new java.awt.Dimension(550, 700));
        setSize(getPreferredSize());
        getContentPane().setLayout(new java.awt.GridBagLayout());

        controlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Control"));
        controlPanel.setLayout(new java.awt.GridBagLayout());

        comPortBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM" }));
        comPortBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comPortBoxMouseClicked(evt);
            }
        });
        comPortBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comPortBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        controlPanel.add(comPortBox, gridBagConstraints);

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        controlPanel.add(connectButton, gridBagConstraints);

        jLabel2.setText("Baud Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        controlPanel.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Serial Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        controlPanel.add(jLabel3, gridBagConstraints);

        baudRateField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        baudRateField.setText("9600");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        controlPanel.add(baudRateField, gridBagConstraints);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlPanel.add(clearButton, gridBagConstraints);

        logCheckBox.setText("Log (Tac)");
        logCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlPanel.add(logCheckBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(controlPanel, gridBagConstraints);

        textPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));
        textPane.setLayout(new java.awt.GridBagLayout());

        resultTextPane.setViewportView(resultTextField);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        textPane.add(resultTextPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(textPane, gridBagConstraints);

        messagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Messages"));
        messagePanel.setLayout(new java.awt.GridBagLayout());

        gllCheckBox.setText("GLL (Lat/Long)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        messagePanel.add(gllCheckBox, gridBagConstraints);

        vtgCheckBox.setText("VTG (Vector Track)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        messagePanel.add(vtgCheckBox, gridBagConstraints);

        gsvCheckBox.setText("GSV (Sat. Data)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        messagePanel.add(gsvCheckBox, gridBagConstraints);

        gsaCheckBox.setText("GSA (Sat. Health)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        messagePanel.add(gsaCheckBox, gridBagConstraints);

        ggaCheckBox.setText("GGA (Fix Data)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        messagePanel.add(ggaCheckBox, gridBagConstraints);

        rmcCheckBox.setText("RMC (Min. Data)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        messagePanel.add(rmcCheckBox, gridBagConstraints);

        fixStatusText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fixStatusText.setText("Fix Status | None");
        fixStatusText.setToolTipText("");
        fixStatusText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        messagePanel.add(fixStatusText, gridBagConstraints);

        tacCheckBox.setText("Tactical (Tac.)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        messagePanel.add(tacCheckBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(messagePanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        if (receiver == null) {
            
            StateMachine statemon = new StateMachine ();
            Thread stateThread = new Thread (statemon);
            StateMachine.connected = true;
            stateThread.start();
            
            receiver = new Rx (comPortBox.getSelectedItem().toString());
            
            connectButton.setBackground(Color.green);
            
        } else {
            
            StateMachine.connected = false;
            receiver.purge();
            receiver = null;
            fixStatusText.setText("Fix Status | Offline");
            connectButton.setBackground(Color.red);
        }
    }//GEN-LAST:event_connectButtonActionPerformed

    private void comPortBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comPortBoxActionPerformed
        
    }//GEN-LAST:event_comPortBoxActionPerformed

    private void comPortBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comPortBoxMouseClicked
        populateCommPorts();
    }//GEN-LAST:event_comPortBoxMouseClicked

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        resultTextField.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void logCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logCheckBoxActionPerformed

    }//GEN-LAST:event_logCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GPSNetDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GPSNetDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GPSNetDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GPSNetDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GPSNetDisplay().setVisible(true);
            }
        });
    }

    public static void updateResultPane(String str) {
        
        String timeStamp = new SimpleDateFormat("yy.MM.dd.HH.mm.ss").format(new Date());

        String result = resultTextField.getText() + "\n[" + timeStamp + "] " + str + "\n";
        resultTextField.setText(result);
        
        resultTextField.getCaret().setDot( Integer.MAX_VALUE);
        
    }

    public static void populateCommPorts() {

        SerialPort [] portNames = SerialPort.getCommPorts();

        comPortBox.removeAllItems();

        for (SerialPort portname : portNames) {
            comPortBox.addItem(portname.getSystemPortName());
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField baudRateField;
    private javax.swing.JButton clearButton;
    public static javax.swing.JComboBox<String> comPortBox;
    private javax.swing.JButton connectButton;
    private javax.swing.JPanel controlPanel;
    public static javax.swing.JLabel fixStatusText;
    public static javax.swing.JCheckBox ggaCheckBox;
    public static javax.swing.JCheckBox gllCheckBox;
    public static javax.swing.JCheckBox gsaCheckBox;
    public static javax.swing.JCheckBox gsvCheckBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public static javax.swing.JCheckBox logCheckBox;
    private javax.swing.JPanel messagePanel;
    public static javax.swing.JTextPane resultTextField;
    private javax.swing.JScrollPane resultTextPane;
    public static javax.swing.JCheckBox rmcCheckBox;
    public static javax.swing.JCheckBox tacCheckBox;
    private javax.swing.JPanel textPane;
    public static javax.swing.JCheckBox vtgCheckBox;
    // End of variables declaration//GEN-END:variables
}
